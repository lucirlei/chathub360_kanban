{"version":3,"file":"superadmin_pages-CdFLWNsZ.js","sources":["../../../app/javascript/superadmin_pages/components/playground/assets/typing.gif","../../../app/javascript/superadmin_pages/views/playground/Index.vue","../../../app/javascript/superadmin_pages/views/dashboard/Index.vue","../../../app/javascript/entrypoints/superadmin_pages.js"],"sourcesContent":["export default \"__VITE_ASSET__BCwCRxJN__\"","<script>\nimport { useMessageFormatter } from 'shared/composables/useMessageFormatter';\nimport PlaygroundHeader from '../../components/playground/Header.vue';\nimport UserMessage from '../../components/playground/UserMessage.vue';\nimport BotMessage from '../../components/playground/BotMessage.vue';\nimport TypingIndicator from '../../components/playground/TypingIndicator.vue';\n\nexport default {\n  components: {\n    PlaygroundHeader,\n    UserMessage,\n    BotMessage,\n    TypingIndicator,\n  },\n  props: {\n    componentData: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n  setup() {\n    const { formatMessage } = useMessageFormatter();\n    return {\n      formatMessage,\n    };\n  },\n  data() {\n    return { messages: [], messageContent: '', isWaiting: false };\n  },\n  computed: {\n    previousMessages() {\n      return this.messages.map(message => ({\n        type: message.type,\n        message: message.content,\n      }));\n    },\n  },\n  mounted() {\n    this.focusInput();\n  },\n  methods: {\n    focusInput() {\n      this.$refs.messageInput.focus();\n    },\n    onMessageSend() {\n      this.addMessageToData('User', this.messageContent);\n      this.sendMessageToServer(this.messageContent);\n    },\n    scrollToLastMessage() {\n      this.$nextTick(() => {\n        const messageId = this.messages[this.messages.length - 1].id;\n        const messageElement = document.getElementById(`message-${messageId}`);\n        messageElement.scrollIntoView({ behavior: 'smooth' });\n      });\n    },\n    addMessageToData(type, content) {\n      this.messages.push({ id: this.messages.length, type, content });\n      this.scrollToLastMessage();\n    },\n    async sendMessageToServer(messageContent) {\n      this.messageContent = '';\n      this.isWaiting = true;\n      const csrfToken = document\n        .querySelector('meta[name=\"csrf-token\"]')\n        .getAttribute('content');\n\n      try {\n        const response = await fetch(window.location.href, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-CSRF-Token': csrfToken,\n          },\n          body: JSON.stringify({\n            message: messageContent,\n            previous_messages: this.previousMessages,\n          }),\n          credentials: 'include',\n        });\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const { message } = await response.json();\n        this.addMessageToData('Bot', message);\n      } catch (error) {\n        this.addMessageToData(\n          'bot',\n          'Error: Could not retrieve response. Please check the console for more details.'\n        );\n      } finally {\n        this.isWaiting = false;\n        this.focusInput();\n      }\n    },\n  },\n};\n</script>\n\n<template>\n  <section class=\"flex flex-col w-full h-full bg-slate-25\">\n    <PlaygroundHeader\n      :response-source-name=\"componentData.responseSourceName\"\n      :response-source-path=\"componentData.responseSourcePath\"\n    />\n    <div class=\"flex-1 px-8 py-4 overflow-auto\">\n      <div\n        v-for=\"message in messages\"\n        :id=\"`message-${message.id}`\"\n        :key=\"message.id\"\n      >\n        <UserMessage\n          v-if=\"message.type === 'User'\"\n          :message=\"formatMessage(message.content)\"\n        />\n        <BotMessage v-else :message=\"formatMessage(message.content)\" />\n      </div>\n      <TypingIndicator v-if=\"isWaiting\" />\n    </div>\n    <div class=\"w-full px-8 py-6\">\n      <textarea\n        ref=\"messageInput\"\n        v-model=\"messageContent\"\n        :rows=\"4\"\n        class=\"resize-none block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border !outline-2 border-slate-100 focus:ring-woot-500 focus:border-woot-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-woot-500 dark:focus:border-woot-500\"\n        placeholder=\"Type a message... [CMD/CTRL + Enter to send]\"\n        autofocus\n        autocomplete=\"off\"\n        @keydown.meta.enter=\"onMessageSend\"\n        @keydown.ctrl.enter=\"onMessageSend\"\n      />\n    </div>\n  </section>\n</template>\n","<script setup>\nimport { computed } from 'vue';\nimport BarChart from 'shared/components/charts/BarChart.vue';\nconst props = defineProps({\n  componentData: {\n    type: Object,\n    default: () => ({}),\n  },\n});\n\nconst prepareData = sourceData => {\n  var labels = [];\n  var data = [];\n  sourceData.forEach(item => {\n    labels.push(item[0]);\n    data.push(item[1]);\n  });\n  return {\n    labels,\n    datasets: [\n      {\n        type: 'bar',\n        backgroundColor: 'rgb(31, 147, 255)',\n        yAxisID: 'y',\n        label: 'Conversations',\n        data: data,\n      },\n    ],\n  };\n};\n\nconst chartData = computed(() => {\n  return prepareData(props.componentData.chartData);\n});\n\nconst { accountsCount, usersCount, inboxesCount, conversationsCount } =\n  props.componentData;\n</script>\n\n<template>\n  <div class=\"w-full h-full\">\n    <header class=\"main-content__header\" role=\"banner\">\n      <h1 id=\"page-title\" class=\"main-content__page-title\">\n        {{ 'Admin Dashboard' }}\n      </h1>\n    </header>\n\n    <section class=\"main-content__body main-content__body--flush\">\n      <div class=\"report--list\">\n        <div class=\"report-card\">\n          <div class=\"metric\">{{ accountsCount }}</div>\n          <div>{{ 'Accounts' }}</div>\n        </div>\n        <div class=\"report-card\">\n          <div class=\"metric\">{{ usersCount }}</div>\n          <div>{{ 'Users' }}</div>\n        </div>\n        <div class=\"report-card\">\n          <div class=\"metric\">{{ inboxesCount }}</div>\n          <div>{{ 'Inboxes' }}</div>\n        </div>\n        <div class=\"report-card\">\n          <div class=\"metric\">{{ conversationsCount }}</div>\n          <div>{{ 'Conversations' }}</div>\n        </div>\n      </div>\n    </section>\n    <!-- eslint-disable vue/no-static-inline-styles -->\n    <BarChart\n      class=\"p-8 w-full\"\n      :collection=\"chartData\"\n      style=\"max-height: 500px\"\n    />\n  </div>\n</template>\n","import 'chart.js';\nimport { createApp, h } from 'vue';\nimport VueDOMPurifyHTML from 'vue-dompurify-html';\n\nimport PlaygroundIndex from '../superadmin_pages/views/playground/Index.vue';\nimport DashboardIndex from '../superadmin_pages/views/dashboard/Index.vue';\n\nconst ComponentMapping = {\n  PlaygroundIndex: PlaygroundIndex,\n  DashboardIndex: DashboardIndex,\n};\n\nconst renderComponent = (componentName, props) => {\n  const app = createApp({\n    data() {\n      return { props: props };\n    },\n    render() {\n      return h(ComponentMapping[componentName], { componentData: this.props });\n    },\n  });\n\n  app.use(VueDOMPurifyHTML);\n  app.mount('#app');\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const element = document.getElementById('app');\n  if (element) {\n    const componentName = element.dataset.componentName;\n    const props = JSON.parse(element.dataset.props);\n    renderComponent(componentName, props);\n  }\n});\n"],"names":["TypingIndicator","_sfc_main","PlaygroundHeader","UserMessage","BotMessage","formatMessage","useMessageFormatter","message","messageId","type","content","messageContent","csrfToken","response","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_openBlock","_createElementBlock","_createVNode","_component_PlaygroundHeader","$props","_createElementVNode","_Fragment","_renderList","$data","_createBlock","_component_UserMessage","$setup","_component_BotMessage","_component_TypingIndicator","_createCommentVNode","_cache","$event","_withKeys","_withModifiers","$options","args","props","__props","prepareData","sourceData","labels","data","item","chartData","computed","accountsCount","usersCount","inboxesCount","conversationsCount","ComponentMapping","PlaygroundIndex","DashboardIndex","renderComponent","componentName","app","createApp","h","VueDOMPurifyHTML","element"],"mappings":"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"}